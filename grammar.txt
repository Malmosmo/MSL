prog : stmtList

stmtList : stmtList stmtFull
         : stmtFull

stmtFull : stmt
         : func

block : block stmt
      : stmt

stmt : mccmd ;
     : expr-assgn ;
     : assgn ;
     : expr ;
     : group
     : for-expr
     : while-expr
     : COMMENT

func : FUNC STRING { block }

mccmd : MCCMD
      : score-create
      : score-init
      : score-decl
      : score-op

group : group-specifier { block }

group-specifier : EXEC ( STRING )
                : group-specifier , EXEC ( STRING )

score-create : CREATE score-decl
             : CREATE score-init

score-init : score-decl = expr

score-decl : SCORE IDENTIFIER : IDENTIFIER
           : SCORE IDENTIFIER : ( IDENTIFIER , IDENTIFIER )

score-op : IDENTIFIER >> IDENTIFIER
         : IDENTIFIER << IDENTIFIER
         : IDENTIFIER >< IDENTIFIER

init : VAR IDENTIFIER = expr

assgn : IDENTIFIER = expr
      : IDENTIFIER PLUS PLUS
      : IDENTIFIER MINUS MINUS

expr-assgn : IDENTIFIER (+|-|*|/)= IDENTIFIER

expr : comp-expr
     : expr (AND|OR) expr

comp : arith
     : NOT comp
     : arith (EE|NE|LT|GT|LTE|GTE) arith

arith : term
           : arith PLUS arith
           : arith MINUS arith

term : factor
     : term MUL term
     : term DIV term

factor : atom
       : PLUS factor
       : MINUS factor

atom : literal
     : IDENTIFIER
     : ( expr )

literal : INT
        : FLOAT
        : STRING
        : BOOLEAN

if-expr : IF ( expr ) { block }

for-expr : FOR ( decl ; expr ; assgn ) { body }